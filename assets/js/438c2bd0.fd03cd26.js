"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[8026],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>f});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),u=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},s=function(e){var r=u(e.components);return n.createElement(c.Provider,{value:r},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(t),m=o,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return t?n.createElement(f,i(i({ref:r},s),{},{components:t})):n.createElement(f,i({ref:r},s))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=t[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3916:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=t(7462),o=(t(7294),t(3905));const a={sidebar_position:1},i="Arduino CLI",l={unversionedId:"arduino/cli",id:"arduino/cli",title:"Arduino CLI",description:"Arduino CLI is a command line tool for compiling and uploading Arduino sketches. It is a wrapper around the Arduino IDE and provides a faster and more flexible alternative to the Arduino IDE.",source:"@site/docs/arduino/cli.md",sourceDirName:"arduino",slug:"/arduino/cli",permalink:"/personal-docs/docs/arduino/cli",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/arduino/cli.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Linux",permalink:"/personal-docs/docs/category/linux-1"},next:{title:"Resources",permalink:"/personal-docs/docs/resources"}},c={},u=[{value:"Usage",id:"usage",level:2}],s={toc:u},p="wrapper";function d(e){let{components:r,...t}=e;return(0,o.kt)(p,(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"arduino-cli"},"Arduino CLI"),(0,o.kt)("p",null,"Arduino CLI is a command line tool for compiling and uploading Arduino sketches. It is a wrapper around the Arduino IDE and provides a faster and more flexible alternative to the Arduino IDE."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Check board list:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"arduino-cli board list\n")),(0,o.kt)("p",null,"Compile sketch:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"arduino-cli compile --fqbn arduino:avr:uno /path/to/sketch\n")),(0,o.kt)("p",null,"Upload sketch:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"arduino-cli upload -p /dev/ttyACM0 --fqbn arduino:avr:uno /path/to/sketch\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note"),": Ensure your user has access to ",(0,o.kt)("inlineCode",{parentName:"p"},"/dev/ttyACM0")," or whichever port your Arduino is connected to."),(0,o.kt)("p",null,"If not, you can do the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo chmod a+rw /dev/ttyACM0\n")))}d.isMDXComponent=!0}}]);