"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[9205],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>c});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=a.createContext({}),d=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(o.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=d(n),k=l,c=m["".concat(o,".").concat(k)]||m[k]||u[k]||r;return n?a.createElement(c,i(i({ref:t},s),{},{components:n})):a.createElement(c,i({ref:t},s))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=k;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[m]="string"==typeof e?e:l,i[1]=p;for(var d=2;d<r;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},1726:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>d});var a=n(7462),l=(n(7294),n(3905));const r={sidebar_position:1},i="EC2 Deployment using Nginx and pm2",p={unversionedId:"aws/basic-ec2-deploy",id:"aws/basic-ec2-deploy",title:"EC2 Deployment using Nginx and pm2",description:"Nginx Setup",source:"@site/docs/aws/basic-ec2-deploy.md",sourceDirName:"aws",slug:"/aws/basic-ec2-deploy",permalink:"/personal-docs/docs/aws/basic-ec2-deploy",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/aws/basic-ec2-deploy.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"AWS",permalink:"/personal-docs/docs/category/aws"},next:{title:"Certbot Setup for Ubuntu-Server with Nginx",permalink:"/personal-docs/docs/aws/ec2-certbot-setup"}},o={},d=[{value:"Nginx Setup",id:"nginx-setup",level:2},{value:"1. Install Nginx",id:"1-install-nginx",level:3},{value:"2. Adjust Firewall",id:"2-adjust-firewall",level:3},{value:"3. Check Nginx Server",id:"3-check-nginx-server",level:3},{value:"4. (Optional) Block all other Ports",id:"4-optional-block-all-other-ports",level:3},{value:"5. Configuring Nginx",id:"5-configuring-nginx",level:3},{value:"Node and NPM Setup",id:"node-and-npm-setup",level:2},{value:"1. Install Node",id:"1-install-node",level:3},{value:"2. Install NPM",id:"2-install-npm",level:3},{value:"3. Install Yarn",id:"3-install-yarn",level:3},{value:"PM2 Setup",id:"pm2-setup",level:2},{value:"1. Install",id:"1-install",level:3},{value:"PM2 Cheatsheet",id:"pm2-cheatsheet",level:3},{value:"Fork mode",id:"fork-mode",level:3},{value:"Cluster mode",id:"cluster-mode",level:3},{value:"Listing",id:"listing",level:3},{value:"Logs",id:"logs",level:3},{value:"Actions",id:"actions",level:3},{value:"Misc",id:"misc",level:3},{value:"Git Sync",id:"git-sync",level:2},{value:".env Updates",id:"env-updates",level:2},{value:"Docker",id:"docker",level:3},{value:"ENV",id:"env",level:3},{value:"Mongo",id:"mongo",level:2},{value:"Admin user",id:"admin-user",level:3}],s={toc:d},m="wrapper";function u(e){let{components:t,...n}=e;return(0,l.kt)(m,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"ec2-deployment-using-nginx-and-pm2"},"EC2 Deployment using Nginx and pm2"),(0,l.kt)("h2",{id:"nginx-setup"},"Nginx Setup"),(0,l.kt)("h3",{id:"1-install-nginx"},"1. Install Nginx"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"sudo apt update\nsudo apt install nginx\n")),(0,l.kt)("h3",{id:"2-adjust-firewall"},"2. Adjust Firewall"),(0,l.kt)("p",null,"Allow only communication over specifc ports"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"sudo ufw app list\n")),(0,l.kt)("p",null,"Displays available application profiles"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Available applications:\n  Nginx Full\n  Nginx HTTP\n  Nginx HTTPS\n  OpenSSH\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Nginx Full"),": This profile opens both port 80 (normal, unencrypted web traffic) and port 443 (TLS/SSL encrypted traffic)\n",(0,l.kt)("strong",{parentName:"p"},"Nginx HTTP"),": This profile opens only port 80 (normal, unencrypted web traffic)\n",(0,l.kt)("strong",{parentName:"p"},"Nginx HTTPS"),": This profile opens only port 443 (TLS/SSL encrypted traffic)"),(0,l.kt)("p",null,"Enable a profile"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"sudo ufw allow 'Nginx HTTP'\n")),(0,l.kt)("p",null,"Check Status"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"sudo ufw status\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Status: active\n\nTo                         Action      From\n--                         ------      ----\nOpenSSH                    ALLOW       Anywhere                  \nNginx HTTP                 ALLOW       Anywhere                  \nOpenSSH (v6)               ALLOW       Anywhere (v6)             \nNginx HTTP (v6)            ALLOW       Anywhere (v6)\n")),(0,l.kt)("p",null,"If ",(0,l.kt)("inlineCode",{parentName:"p"},"inactive")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ufw enable\n")),(0,l.kt)("p",null,"Check if config is valid with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"nginx -t\n")),(0,l.kt)("h3",{id:"3-check-nginx-server"},"3. Check Nginx Server"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"systemctl status nginx\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"nginx.service - A high performance web server and a reverse proxy server\n   Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)\n   Active: active (running) since Fri 2018-04-20 16:08:19 UTC; 3 days ago\n     Docs: man:nginx(8)\n Main PID: 2369 (nginx)\n    Tasks: 2 (limit: 1153)\n   CGroup: /system.slice/nginx.service\n           \u251c\u25002369 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;\n           \u2514\u25002380 nginx: worker process\n")),(0,l.kt)("h3",{id:"4-optional-block-all-other-ports"},"4. (Optional) Block all other Ports"),(0,l.kt)("p",null,"Block all incoming Traffic"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"sudo ufw default deny incoming\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Default incoming policy changed to 'deny'\n(be sure to update your rules accordingly)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'sudo ufw allow in "Nginx HTTPS"\n')),(0,l.kt)("p",null,"Enable Firewall with changes"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"sudo ufw enable\n")),(0,l.kt)("h3",{id:"5-configuring-nginx"},"5. Configuring Nginx"),(0,l.kt)("p",null,"Remove default configuration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"sudo rm /etc/nginx/sites-enabled/default\n")),(0,l.kt)("p",null,"Create a new site"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"sudo nano /etc/nginx/sites-available/[site-name]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'server {\n    listen 80;\n    server_name example.com;\n\n    location / {\n        proxy_set_header   X-Forwarded-For $remote_addr;\n        proxy_set_header   Host $http_host;\n        proxy_pass         "http://127.0.0.1:[port]";\n    }\n}\n')),(0,l.kt)("p",null,"Create symlink with sites-enabled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"sudo ln -s /etc/nginx/sites-available/[site-name] /etc/nginx/sites-enabled/[site-name]\n")),(0,l.kt)("p",null,"Restart Nginx"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"sudo service nginx restart\n")),(0,l.kt)("h2",{id:"node-and-npm-setup"},"Node and NPM Setup"),(0,l.kt)("h3",{id:"1-install-node"},"1. Install Node"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"sudo apt install nodejs\n")),(0,l.kt)("h3",{id:"2-install-npm"},"2. Install NPM"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"sudo apt install npm\n")),(0,l.kt)("h3",{id:"3-install-yarn"},"3. Install Yarn"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"npm install --global yarn\n")),(0,l.kt)("h2",{id:"pm2-setup"},"PM2 Setup"),(0,l.kt)("h3",{id:"1-install"},"1. Install"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"sudo npm install pm2 -g\n")),(0,l.kt)("p",null,"start app"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"pm2 start app.js\n")),(0,l.kt)("p",null,"for nextjs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'pm2 start npm --name "next" -- start\n')),(0,l.kt)("h3",{id:"pm2-cheatsheet"},"PM2 Cheatsheet"),(0,l.kt)("h3",{id:"fork-mode"},"Fork mode"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Command"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 start app.js --name my-api")),(0,l.kt)("td",{parentName:"tr",align:null},"Start and name a process")))),(0,l.kt)("h3",{id:"cluster-mode"},"Cluster mode"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Command"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 start app.js -i 0")),(0,l.kt)("td",{parentName:"tr",align:null},"Will start maximum processes with LB depending on available CPUs")))),(0,l.kt)("h3",{id:"listing"},"Listing"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Command"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 list")),(0,l.kt)("td",{parentName:"tr",align:null},"Display all processes status")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 jlist")),(0,l.kt)("td",{parentName:"tr",align:null},"Print process list in raw JSON")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 prettylist")),(0,l.kt)("td",{parentName:"tr",align:null},"Print process list in beautified JSON")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 describe 0")),(0,l.kt)("td",{parentName:"tr",align:null},"Display all information about a specific process")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 monit")),(0,l.kt)("td",{parentName:"tr",align:null},"Monitor all processes")))),(0,l.kt)("h3",{id:"logs"},"Logs"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Command"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 logs [--raw]")),(0,l.kt)("td",{parentName:"tr",align:null},"Display all processes logs in streaming")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 flush")),(0,l.kt)("td",{parentName:"tr",align:null},"Empty all log files")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 reloadLogs")),(0,l.kt)("td",{parentName:"tr",align:null},"Reload all logs")))),(0,l.kt)("h3",{id:"actions"},"Actions"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Command"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 stop all")),(0,l.kt)("td",{parentName:"tr",align:null},"Stop all processes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 restart all")),(0,l.kt)("td",{parentName:"tr",align:null},"Restart all processes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 reload all")),(0,l.kt)("td",{parentName:"tr",align:null},"Will 0s downtime reload (for NETWORKED apps)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 stop 0")),(0,l.kt)("td",{parentName:"tr",align:null},"Stop specific process id")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 restart 0")),(0,l.kt)("td",{parentName:"tr",align:null},"Restart specific process id")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 delete 0")),(0,l.kt)("td",{parentName:"tr",align:null},"Will remove process from pm2 list")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 delete all")),(0,l.kt)("td",{parentName:"tr",align:null},"Will remove all processes from pm2 list")))),(0,l.kt)("h3",{id:"misc"},"Misc"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Command"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 reset <process>")),(0,l.kt)("td",{parentName:"tr",align:null},"Reset meta data (restarted time...)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 updatePM2")),(0,l.kt)("td",{parentName:"tr",align:null},"Update in memory pm2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 ping")),(0,l.kt)("td",{parentName:"tr",align:null},"Ensure pm2 daemon has been launched")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 sendSignal SIGUSR2 my-app")),(0,l.kt)("td",{parentName:"tr",align:null},"Send system signal to script")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"---"),(0,l.kt)("td",{parentName:"tr",align:null},"---")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 start app.js --no-daemon")),(0,l.kt)("td",{parentName:"tr",align:null},"Run pm2 daemon in the foreground if it doesn't exist already")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 start app.js --no-vizion")),(0,l.kt)("td",{parentName:"tr",align:null},"Skip vizion features (versioning control)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pm2 start app.js --no-autorestart")),(0,l.kt)("td",{parentName:"tr",align:null},"Do not automatically restart app")))),(0,l.kt)("h2",{id:"git-sync"},"Git Sync"),(0,l.kt)("p",null,"Ignores local changes on server"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"git reset --hard\ngit pull\n")),(0,l.kt)("h2",{id:"env-updates"},".env Updates"),(0,l.kt)("p",null,"Modify .env in client as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"REACT_APP_API_URL=http://localhost:5000/ => REACT_APP_API_URL=http://148.72.208.218/api/\n")),(0,l.kt)("h3",{id:"docker"},"Docker"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'sudo docker run -t -d -p 1337:9000 --network="host" sushritlawliet/braggi\n')),(0,l.kt)("h3",{id:"env"},"ENV"),(0,l.kt)("p",null,"Windows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"set NODE_ENV=production\n")),(0,l.kt)("p",null,"Linux or other unix based system :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"export NODE_ENV=production\n")),(0,l.kt)("h2",{id:"mongo"},"Mongo"),(0,l.kt)("h3",{id:"admin-user"},"Admin user"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'db.createUser(\n  {\n    user: "lawlieto",\n    pwd: passwordPrompt(), // or cleartext password\n    roles: [ { role: "userAdminAnyDatabase", db: "admin" }, "readWriteAnyDatabase" ]\n  }\n)\n')))}u.isMDXComponent=!0}}]);